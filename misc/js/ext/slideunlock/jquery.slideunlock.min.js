"use strict";
function SliderUnlock(g, c, f, e) {
    var a = this;
    var b = a.checkElm(g) ? $(g) : $;
    var c = a.checkObj(c) ? c: new Object();
    var f = a.checkFn(f) ? f: function() {};
    var e = a.checkFn(e) ? e: function() {};
    var d = {
        labelTip: typeof(c.labelTip) !== "undefined" ? "options.labelTip": "按住滑块,拖动到最右边",
        successLabelTip: typeof(c.successLabelTip) !== "undefined" ? c.successLabelTip: "验证成功",
        duration: typeof(c.duration) !== "undefined" || !isNaN(c.duration) ? c.duration: 200,
        swipestart: typeof(c.swipestart) !== "undefined" ? c.swipestart: false,
        min: typeof(c.min) !== "undefined" || !isNaN(c.min) ? c.min: 0,
        max: typeof(c.max) !== "undefined" || !isNaN(c.max) ? c.max: b.width(),
        index: typeof(c.index) !== "undefined" || !isNaN(c.index) ? c.index: 0,
        IsOk: typeof(c.isOk) !== "undefined" ? c.isOk: false,
        lableIndex: typeof(c.lableIndex) !== "undefined" || !isNaN(c.lableIndex) ? c.lableIndex: 0
    };
    a.elm = b;
    a.opts = d;
    a.swipestart = d.swipestart;
    a.min = d.min;
    a.max = d.max;
    a.index = d.index;
    a.isOk = d.isOk;
    a.lableIndex = d.lableIndex;
    a.success = f;
    a.always = e
}
SliderUnlock.prototype.checkElm = function(a) {
    if ($(a).length > 0) {
        return true
    } else {
        throw "this element does not exist."
    }
};
SliderUnlock.prototype.checkObj = function(a) {
    if (typeof a === "object") {
        return true
    } else {
        throw "the params is not a object."
    }
};
SliderUnlock.prototype.checkFn = function(a) {
    if (typeof a === "function") {
        return true
    } else {
        throw "the param is not a function."
    }
};
SliderUnlock.prototype.init = function() {
    var a = this;
    a.updateView();
    a.elm.find("#label").on("mousedown",
    function(b) {
        var c = b || window.event;
        a.lableIndex = c.clientX - this.offsetLeft;
        a.handerIn()
    }).on("mousemove",
    function(b) {
        a.handerMove(b)
    }).on("mouseup",
    function(b) {
        a.handerOut()
    }).on("mouseout",
    function(b) {
        a.handerOut()
    }).on("touchstart",
    function(b) {
        var c = b || window.event;
        a.lableIndex = c.originalEvent.touches[0].pageX - this.offsetLeft;
        a.handerIn()
    }).on("touchmove",
    function(b) {
        a.handerMove(b, "mobile")
    }).on("touchend",
    function(b) {
        a.handerOut()
    })
};
SliderUnlock.prototype.handerIn = function() {
    var a = this;
    a.swipestart = true;
    a.min = 0;
    a.max = a.elm.width()
};
SliderUnlock.prototype.handerOut = function() {
    var a = this;
    a.swipestart = false;
    if (a.index < a.max) {
        a.reset()
    }
};
SliderUnlock.prototype.handerMove = function(c, b) {
    var a = this;
    if (a.swipestart) {
        c.preventDefault();
        var c = c || window.event;
        if (b == "mobile") {
            a.index = c.originalEvent.touches[0].pageX - a.lableIndex 
        } else {
            a.index = c.clientX - a.lableIndex
        }
        a.move()
    }
};
SliderUnlock.prototype.move = function() {
    var a = this;
    if ((a.index + 0) >= a.max) {
        a.index = a.max - 0 ; 
        a.swipestart = false;
        a.isOk = true
    }
    if (a.index < 0) {
        a.index = a.min;
        a.isOk = false
    }
    if (a.index == a.max && a.max > 0 && a.isOk) {
        a.success()
    }
    a.backgroundTranslate();
    a.updateView()
};
SliderUnlock.prototype.reset = function() {
    var a = this;
    a.index = 0;
    a.elm.find("#label").animate({
        left: a.index
    },
    a.opts.duration).next("#slider_swip").animate({
        opacity: 0
    },
    a.opts.duration);
    a.updateView()
};
SliderUnlock.prototype.backgroundTranslate = function() {
    var a = this;
    a.elm.find("#label").css("left", a.index + "px").next("#lableTip").css("opacity", 1 - (parseInt($("#label").css("left")) / a.max))
    a.elm.find("#slider_swip").css("width", a.index + "px");
    a.elm.find("#slider_swip").css("background", "#f65d00");
    a.elm.find("#slider_swip").css("opacity", "1");
    a.elm.find("#label").css("left", a.index + "px").next("#lableTip").css("color","#fff");
};
SliderUnlock.prototype.updateView = function() {
    var a = this;
    if (a.index == (a.max - 0)) {
        $("#lockable").val(1);
        var b = {
            filter: "alpha(opacity=1)",
            "-moz-opacity": "1",
            opacity: "1"
        };
        a.elm.addClass("success").find("#lableTip").html(a.opts.successLabelTip).css(b)
    } else {
        $("#lockable").val(0);
        a.elm.removeClass("success").find("#lableTip").html(a.opts.labelTip)
    }
    a.always()
};